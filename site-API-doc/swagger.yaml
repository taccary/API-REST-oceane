openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: |
    Bienvenue dans la documentation de l'API.

    ## Authentification

    Cette API utilise l'authentification par jeton Bearer. Pour vous authentifier, suivez les étapes ci-dessous :

    1. **Obtenez un jeton JWT** : Utilisez l'endpoint `/login` pour obtenir un jeton JWT en fournissant votre email et votre mot de passe.
    2. **Autorisez Swagger UI** : Cliquez sur le bouton "Authorize" en haut à droite de Swagger UI. Entrez votre jeton JWT `Bearer ` (par exemple, `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`).
    3. **Effectuez des requêtes** : Une fois autorisé, Swagger UI inclura automatiquement le jeton Bearer dans l'en-tête Authorization pour les requêtes vers les endpoints sécurisés.

servers:
  - url: http://127.0.0.1:8000
    description: Serveur local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /login:
    post:
      summary: Authentification de l'utilisateur
      description: |
        Utilisez cet endpoint pour obtenir un jeton JWT en fournissant votre email et votre mot de passe.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "test@bts.sio"
                password:
                  type: string
                  example: "sio"
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"

  /bateaux:
    get:
      summary: Liste des bateaux
      description: Retourne tous les bateaux
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nom:
                      type: string
                    type:
                      type: string
        '401':
          description: Non autorisé
    post:
      summary: Créer un bateau
      description: Crée un nouveau bateau
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                type:
                  type: string
      responses:
        '201':
          description: Créé
        '401':
          description: Non autorisé

  /bateaux/{id}:
    get:
      summary: Détail d'un bateau
      description: Retourne un bateau par son id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nom:
                    type: string
                  type:
                    type: string
        '404':
          description: Non trouvé
    put:
      summary: Modifier un bateau
      description: Modifie un bateau existant
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                type:
                  type: string
      responses:
        '200':
          description: Succès
        '401':
          description: Non autorisé
        '404':
          description: Non trouvé
    delete:
      summary: Supprimer un bateau
      description: Supprime un bateau existant
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Supprimé
        '401':
          description: Non autorisé
        '404':
          description: Non trouvé

